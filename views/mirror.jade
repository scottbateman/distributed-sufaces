extends layout

block content
  h1 Drag balls
  h2 User tag: 
    span#userID 
      
  a(href='/') Sharing mode

  .drag#ball1
    p.id 1
  .drag#ball2
    p.id 2
  .drag#ball3
    p.id 3
  .drag#ball4
    p.id 4

  - var host = 'http://' + settings.ip + ':' + settings.port;
  script(type='text/javascript', src='http://code.jquery.com/jquery-1.10.2.min.js')
  script(type='text/javascript', src=host + '/javascripts/hammer.js')
  script(type='text/javascript', src=host + '/socket.io/socket.io.js')

  script(type='text/javascript').

    var socket = io.connect('#{host}');
    socket.emit('connected', { path: window.location.pathname });
    startHammer($('.drag'));

    function startHammer(elem) {
      for (var i = 0; i < elem.length; i++) {
        new Hammer(elem[i], { prevent_default: true, no_mouseevents: true });
      };

      elem.on('touch', function(ev) {
        var touches = ev.originalEvent.gesture.touches;
        for (var t = 0, len = touches.length; t < len; t++) {
          var target = $(touches[t].target);
          $('.drag').css({ zIndex: 5 });
          target.css({ zIndex: 10 });
        }
      });

      elem.on('drag transform', function(ev) {
        var touches = ev.originalEvent.gesture.touches;
        for (var t = 0, len = touches.length; t < len; t++) {
          var target = $(touches[t].target);

          if (target.hasClass('drag')) {
            target.css({
              left: touches[t].pageX - target.width() / 2,
              top: touches[t].pageY - target.height() / 2
            });
            sendElement(target, touches[t].pageX, touches[t].pageY);
          }
        }
      });
    };

    socket.on('hello', function(data) {
      console.log(data.msg);

      $(document).ready(function() {
        var userID = $('#userID');
        userID.text(data.name);
        userID.css({ background: data.color });

        $('.id').text(data.name);
      });
    });

    socket.on('move', function(data) {
      var element = $('#' + data.id)
      element.css({
        left: data.x - element.width() / 2,
        top: data.y - element.height() / 2
      });
    });

    var sendElement = function(target, x, y) {
      socket.emit('move_element', {
        id: target[0].id,
        x: x,
        y: y
      });
    };
